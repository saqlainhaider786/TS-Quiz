let quest = [
  {
    q: "What is TypeScript?",
    op1: "A) A superset of JavaScript",
    op2: "B) A framework for building web applications",
    op3: "C) A database management system",
    op4: "D) A programming language for artificial intelligence",
    ans: "A) A superset of JavaScript",
  },
  {
    q: "Which of the following best describes the role of TypeScript in web development?",
    op1: "A) It replaces JavaScript entirely.",
    op2: "B) It enhances JavaScript by adding static typing and other features.",
    op3: "C) It is only used for server-side development.",
    op4: "D) It is primarily used for styling web pages.",
    ans: "B) It enhances JavaScript by adding static typing and other features.",
  },
  {
    q: "What does TypeScript compile down to?",
    op1: "A) Java",
    op2: "B) Python",
    op3: "C) JavaScript",
    op4: "D) C++",
    ans: "C) JavaScript",
  },
  {
    q: "Which keyword is used to define a variable in TypeScript with a specific type?",
    op1: "A) let",
    op2: "B) function",
    op3: "C) type",
    op4: "D) const",
    ans: "A) let",
  },
  {
    q: "What is the purpose of TypeScript's 'interface' keyword?",
    op1: "A) To create a new class",
    op2: "B) To define custom data types",
    op3: "C) To include external libraries",
    op4: "D) To declare global variables",
    ans: "B) To define custom data types",
  },
  {
    q: "Which TypeScript feature allows for the definition of custom data types based on existing ones?",
    op1: "A) Inheritance",
    op2: "B) Encapsulation",
    op3: "C) Abstraction",
    op4: "D) Generics",
    ans: "D) Generics",
  },
  {
    q: "Which of the following is not a valid TypeScript data type?",
    op1: "A) string",
    op2: "B) boolean",
    op3: "C) number",
    op4: "D) array",
    ans: "D) array",
  },
  {
    q: "What does the 'any' type in TypeScript signify?",
    op1: "A) It represents an unknown type.",
    op2: "B) It indicates a number type.",
    op3: "C) It specifies a string type.",
    op4: "D) It allows any type to be assigned.",
    ans: "D) It allows any type to be assigned.",
  },
  {
    q: "Which TypeScript feature helps catch errors during compile-time rather than runtime?",
    op1: "A) Type inference",
    op2: "B) Type checking",
    op3: "C) Type assertion",
    op4: "D) Type coercion",
    ans: "B) Type checking",
  },
  {
    q: "Which operator in TypeScript is used for type assertion?",
    op1: "A) as",
    op2: "B) ==",
    op3: "C) ===",
    op4: "D) 'typeof'",
    ans: "A) as",
  },
  {
    q: "What is the output of 'console.log(typeof 5)' in TypeScript?",
    op1: "A) number",
    op2: "B) string",
    op3: "C) object",
    op4: "D) undefined",
    ans: "A) number",
  },
  {
    q: "In TypeScript, what does the 'readonly' keyword do?",
    op1: "A) It defines a constant variable.",
    op2: "B) It prevents modifications to a property or variable after initialization.",
    op3: "C) It specifies a variable as optional.",
    op4: "D) It signifies a variable as nullable.",
    ans: "B) It prevents modifications to a property or variable after initialization.",
  },
  {
    q: "Which TypeScript feature allows for defining multiple function signatures with the same name but different parameter types?",
    op1: "A) Function overloading",
    op2: "B) Function overriding",
    op3: "C) Function currying",
    op4: "D) Function chaining",
    ans: "A) Function overloading",
  },
  {
    q: "Which of the following is not a valid access modifier in TypeScript?",
    op1: "A) private",
    op2: "B) protected",
    op3: "C) public",
    op4: "D) internal",
    ans: "D) internal",
  },
  {
    q: "What is the purpose of the 'export' keyword in TypeScript?",
    op1: "A) To define a private variable",
    op2: "B) To import modules from other files",
    op3: "C) To declare a function",
    op4: "D) To export variables, functions, or classes for use in other files",
    ans: "D) To export variables, functions, or classes for use in other files",
  },
  {
    q: "Which TypeScript feature allows for specifying a default value for a function parameter?",
    op1: "A) Optional parameters",
    op2: "B) Default parameters",
    op3: "C) Rest parameters",
    op4: "D) Named parameters",
    ans: "B) Default parameters",
  },
  {
    q: "What is the purpose of the 'namespace' keyword in TypeScript?",
    op1: "A) To define a block of code with private scope",
    op2: "B) To organize code into logical groups and prevent naming collisions",
    op3: "C) To import external libraries",
    op4: "D) To define a class constructor",
    ans: "B) To organize code into logical groups and prevent naming collisions",
  },
  {
    q: "Which TypeScript feature allows for iterating over the properties of an object?",
    op1: "A) for loop",
    op2: "B) while loop",
    op3: "C) forEach loop",
    op4: "D) for...in loop",
    ans: "D) for...in loop",
  },
  {
    q: "What is the purpose of the import keyword in TypeScript?",
    op1: "A) To export variables, functions, or classes for use in other files",
    op2: "B) To define a private variable",
    op3: "C) To import modules from other files",
    op4: "D) To declare a function",
    ans: "C) To import modules from other files",
  },
  {
    q: "Which TypeScript feature allows for defining a set of related functionalities through a common interface?",
    op1: "A) Inheritance",
    op2: "B) Encapsulation",
    op3: "C) Abstraction",
    op4: "D) Polymorphism",
    ans: "C) Abstraction",
  },
];

export default quest;
